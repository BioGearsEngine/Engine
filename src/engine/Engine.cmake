# Files in the project (Relative to this CMAKE file)
FILE(GLOB BIOGEARS_FILES
	"cpp/*.h"
	"cpp/*.cpp"
)
LIST(REMOVE_ITEM BIOGEARS_FILES ${CMAKE_CURRENT_SOURCE_DIR}/cpp/BioGearsEngineJNI.h)
LIST(REMOVE_ITEM BIOGEARS_FILES ${CMAKE_CURRENT_SOURCE_DIR}/cpp/BioGearsEngineJNI.cpp)
LIST(REMOVE_ITEM BIOGEARS_FILES ${CMAKE_CURRENT_SOURCE_DIR}/cpp/BioGearsScenarioDriver.cpp)
LIST(REMOVE_ITEM BIOGEARS_FILES ${CMAKE_CURRENT_SOURCE_DIR}/cpp/BioGearsScenarioDriver.h)
LIST(REMOVE_ITEM BIOGEARS_FILES ${CMAKE_CURRENT_SOURCE_DIR}/cpp/Verification.cpp)
LIST(REMOVE_ITEM BIOGEARS_FILES ${CMAKE_CURRENT_SOURCE_DIR}/cpp/Verification.h)
LIST(REMOVE_ITEM BIOGEARS_FILES ${CMAKE_CURRENT_SOURCE_DIR}/cpp/stdafx.cpp)#PreCompiled Header Generator, will add later
SET(SOURCE ${BIOGEARS_FILES})
FILE(GLOB BIOGEARS_CONTROLLER_FILES
	"cpp/Controller/*.h"
	"cpp/Controller/*.cpp"
)
LIST(APPEND SOURCE ${BIOGEARS_CONTROLLER_FILES})
FILE(GLOB BIOGEARS_SCENARIO_FILES
	"cpp/Controller/Scenario/*.h"
	"cpp/Controller/Scenario/*.cpp"
)
LIST(APPEND SOURCE ${BIOGEARS_SCENARIO_FILES})
FILE(GLOB BIOGEARS_EQUIPMENT_FILES
	"cpp/Equipment/*.h"
	"cpp/Equipment/*.cpp"
)
LIST(APPEND SOURCE ${BIOGEARS_EQUIPMENT_FILES})
FILE(GLOB BIOGEARS_SYSTEMS_FILES
	"cpp/Systems/*.h"
	"cpp/Systems/*.cpp"
)
LIST(APPEND SOURCE ${BIOGEARS_SYSTEMS_FILES})
# Set up Filters
SOURCE_GROUP("" FILES ${BIOGEARS_FILES})
SOURCE_GROUP("Controller" FILES ${BIOGEARS_CONTROLLER_FILES})
SOURCE_GROUP("Controller\\Scenario" FILES ${BIOGEARS_SCENARIO_FILES})
SOURCE_GROUP("Equipment" FILES ${BIOGEARS_EQUIPMENT_FILES})
SOURCE_GROUP("Systems" FILES ${BIOGEARS_SYSTEMS_FILES})

# Do this before ADD_LIBRARY as it may or may not add files to the SOURCE
SET_PRECOMPILED_HEADER(stdafx.h ${CMAKE_CURRENT_SOURCE_DIR}/cpp/stdafx.cpp SOURCE)
# The DLL we are building
ADD_LIBRARY(BioGearsEngine SHARED ${SOURCE})
# Preprocessor Definitions and Include Paths
SET(ENG_FLAGS)
SET(ENG_FLAGS "${ENG_FLAGS} -D BIOGEARS_EXPORT")
SET(ENG_FLAGS "${ENG_FLAGS} -D UNICODE")
SET(ENG_FLAGS "${ENG_FLAGS} -D _UNICODE")
if(MSVC)	
	SET(ENG_FLAGS "${ENG_FLAGS} -Zm120")
ENDIF(MSVC)
TARGET_INCLUDE_DIRECTORIES(BioGearsEngine PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/cpp)
TARGET_INCLUDE_DIRECTORIES(BioGearsEngine PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/../schema/cpp)
TARGET_INCLUDE_DIRECTORIES(BioGearsEngine PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/../cdm/cpp)
TARGET_INCLUDE_DIRECTORIES(BioGearsEngine PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/../../lib)
TARGET_INCLUDE_DIRECTORIES(BioGearsEngine PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/../../lib/Eigen-3.3.1)
TARGET_INCLUDE_DIRECTORIES(BioGearsEngine PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/../../lib/log4cpp/include)

TARGET_INCLUDE_DIRECTORIES(BioGearsEngine PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/../../lib/${XERCES_VER}/src)
TARGET_INCLUDE_DIRECTORIES(BioGearsEngine PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/../../lib/${XSD_VER}/libxsd)

SET_TARGET_PROPERTIES(BioGearsEngine PROPERTIES LINKER_LANGUAGE CXX)
SET_TARGET_PROPERTIES(BioGearsEngine PROPERTIES COMPILE_FLAGS "${ENG_FLAGS}"  PREFIX "")

IF(APPLE)
    SET_TARGET_PROPERTIES(BioGearsEngine PROPERTIES MACOSX_RPATH ON)
ENDIF()

# Dependent Libraries
TARGET_LINK_LIBRARIES(BioGearsEngine CommonDataModel)# will include CommonDataModel dependent libs too!

IF (APPLE)
    ADD_CUSTOM_COMMAND(TARGET BioGearsEngine
        POST_BUILD COMMAND
        ${CMAKE_INSTALL_NAME_TOOL} -add_rpath "@executable_path/../Java/x64"
        $<TARGET_FILE:BioGearsEngine>)
ENDIF()

# Copy to the bin
SET(CONFIG_STRING)
IF(WIN32)
  SET(CONFIG_STRING ${CMAKE_CFG_INTDIR})
ELSE()
  STRING(TOLOWER ${CMAKE_BUILD_TYPE} CONFIG_STRING)
ENDIF()

ADD_CUSTOM_COMMAND(TARGET BioGearsEngine POST_BUILD
                   COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:BioGearsEngine> ${CMAKE_CURRENT_SOURCE_DIR}/../../bin/${CONFIG_STRING}${EX_CONFIG}
)
